name: Check for Updates

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      pull-requests: write
    outputs:
      pr-created: ${{ steps.pr-output.outputs.pr-created }}

    steps:
    - uses: actions/checkout@v4

    - name: Check WordPress base image updates
      id: wordpress
      run: |
        CURRENT=$(grep "FROM wordpress:" Dockerfile | cut -d: -f2)
        LATEST=$(curl -s "https://registry.hub.docker.com/v2/repositories/library/wordpress/tags/?page_size=100" | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+-php[0-9]+\\.[0-9]+-fpm-alpine$")) | .name' | sort -V | tail -1)
        
        # Validate versions are not empty
        if [ -z "$CURRENT" ] || [ -z "$LATEST" ]; then
          echo "Error: Failed to detect WordPress versions"
          echo "Current: '$CURRENT', Latest: '$LATEST'"
          exit 1
        fi
        
        {
          echo "current<<EOF"
          echo "${CURRENT}"
          echo "EOF"
          echo "latest<<EOF"
          echo "${LATEST}"
          echo "EOF"
        } >> $GITHUB_OUTPUT
        
        if [ "$CURRENT" != "$LATEST" ] && [ -n "$CURRENT" ] && [ -n "$LATEST" ]; then
          echo "update_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Check SportsPress plugin updates
      id: sportspress
      run: |
        CURRENT=$(grep "sportspress\." Dockerfile | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" | head -1)
        LATEST=$(curl -s "https://api.wordpress.org/plugins/info/1.0/sportspress.json" | jq -r '.version')
        
        # Validate versions are not empty
        if [ -z "$CURRENT" ] || [ -z "$LATEST" ]; then
          echo "Error: Failed to detect SportsPress versions"
          echo "Current: '$CURRENT', Latest: '$LATEST'"
          exit 1
        fi
        
        {
          echo "current<<EOF"
          echo "${CURRENT}"
          echo "EOF"
          echo "latest<<EOF"
          echo "${LATEST}"
          echo "EOF"
        } >> $GITHUB_OUTPUT
        
        if [ "$CURRENT" != "$LATEST" ] && [ -n "$CURRENT" ] && [ -n "$LATEST" ]; then
          echo "update_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Update Dockerfile
      if: steps.wordpress.outputs.update_needed == 'true' || steps.sportspress.outputs.update_needed == 'true'
      run: |
        if [ "${{ steps.wordpress.outputs.update_needed }}" == "true" ]; then
          if [ -n "${{ steps.wordpress.outputs.latest }}" ]; then
            echo "Updating WordPress from ${{ steps.wordpress.outputs.current }} to ${{ steps.wordpress.outputs.latest }}"
            sed -i "s/FROM wordpress:.*/FROM wordpress:${{ steps.wordpress.outputs.latest }}/" Dockerfile
          else
            echo "Error: WordPress latest version is empty"
            exit 1
          fi
        fi
        if [ "${{ steps.sportspress.outputs.update_needed }}" == "true" ]; then
          if [ -n "${{ steps.sportspress.outputs.latest }}" ]; then
            echo "Updating SportsPress from ${{ steps.sportspress.outputs.current }} to ${{ steps.sportspress.outputs.latest }}"
            sed -i "s/sportspress\.[0-9]\+\.[0-9]\+\.[0-9]\+/sportspress.${{ steps.sportspress.outputs.latest }}/g" Dockerfile
          else
            echo "Error: SportsPress latest version is empty"
            exit 1
          fi
        fi

    - name: Create Pull Request
      id: create-pr
      if: steps.wordpress.outputs.update_needed == 'true' || steps.sportspress.outputs.update_needed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          Update dependencies
          
          - WordPress: ${{ steps.wordpress.outputs.current }} → ${{ steps.wordpress.outputs.latest }}
          - SportsPress: ${{ steps.sportspress.outputs.current }} → ${{ steps.sportspress.outputs.latest }}
        title: 'Update WordPress and SportsPress versions'
        body: |
          Automated update of dependencies:
          
          - WordPress base image: `${{ steps.wordpress.outputs.current }}` → `${{ steps.wordpress.outputs.latest }}`
          - SportsPress plugin: `${{ steps.sportspress.outputs.current }}` → `${{ steps.sportspress.outputs.latest }}`
          
          ## Validation
          
          This PR includes automated testing to ensure:
          - ✅ Docker image builds successfully
          - ✅ WordPress starts and responds to requests
          - ✅ No regressions in functionality
        branch: update-dependencies
        
    - name: Set PR created output
      id: pr-output
      if: steps.create-pr.outputs.pull-request-number
      run: echo "pr-created=true" >> $GITHUB_OUTPUT

  test-updates:
    needs: check-updates
    if: needs.check-updates.outputs.pr-created == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: update-dependencies
        
    - name: Build Docker image
      run: |
        docker build -t sportspress-test-env:test .
        
    - name: Test Docker image
      run: |
        # Start container
        docker run -d --name test-container -p 8082:80 sportspress-test-env:test
        
        # Wait for WordPress to start
        for i in {1..30}; do
          if curl -f http://localhost:8082 > /dev/null 2>&1; then
            echo "✅ WordPress is responding"
            break
          fi
          echo "⏳ Waiting for WordPress... ($i/30)"
          sleep 2
        done
        
        # Verify WordPress is accessible
        if ! curl -f http://localhost:8082 > /dev/null 2>&1; then
          echo "❌ WordPress failed to start"
          docker logs test-container
          exit 1
        fi
        
        # Cleanup
        docker stop test-container
        docker rm test-container
        
        echo "✅ Update validation successful"